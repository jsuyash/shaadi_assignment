{"version":3,"sources":["pages/Home.js","pages/Login.js","components/Carousel/LeftArrow.js","components/Carousel/RightArrow.js","components/Carousel/CarouselContent.js","components/Carousel/CarouselIndicator.js","components/Carousel/index.js","helpers/CommonHelper.js","components/CaraouselHistoryTable.js","components/Header.js","pages/CarouselPage.js","PageRoutes.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","history","push","Login","_dummyAPI","username","state","sessionStorage","setItem","password","loading","handleOnChange","bind","handleOnBlur","_validateForm","handleOnSubmit","event","target","name","value","this","setState","isValid","preventDefault","alert","setTimeout","className","style","fontSize","fontWeight","color","onSubmit","type","placeholder","onChange","onBlur","disabled","onClick","React","Component","LeftArrow","handleOnSlideLeft","RightArrow","handleOnSlideRight","Content","mainText","componentClassName","join","Carousel","content","activeSlide","length","map","data","index","key","CarouselIndicator","showSelectedSlide","element","delay","startCaraousel","setInterval","val","prevProps","clearInterval","CarouselContent","CommonHelper","dateString","option","config","Object","keys","year","month","day","hour","minute","Date","toLocaleDateString","CaraouselHistoryTable","updateHistory","sortedHistory","reverse","noOfSlides","createdAt","formatDate","STYLES","MAIN","display","justifyContent","padding","LOGOUT_TEXT","border","backgroundColor","textTransform","borderRadius","boxSadow","cursor","boxShadow","Header","onLogoutClick","getItem","title","CarouselPage","saveData","JSON","stringify","_renderSelectOptions","num","result","i","ele","modalState","handleShowHistory","handleOnCloseModal","toISOString","prevState","forEach","removeItem","carouselContent","number","generateData","Fragment","open","onClose","center","PageRoutes","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80b4d755.chunk.js","sourcesContent":["const Home = props => {\r\n  const { history } = props;\r\n  history.push(\"/login\");\r\n  return null;\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"../assets/styles/login.scss\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false\r\n    };\r\n\r\n    this.handleOnChange = this.handleOnChange.bind(this);\r\n    this.handleOnBlur = this.handleOnBlur.bind(this);\r\n    this._validateForm = this._validateForm.bind(this);\r\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\r\n  }\r\n\r\n  handleOnBlur(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleOnChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  _validateForm() {\r\n    let isValid = true;\r\n    const { username, password } = this.state;\r\n    if (!username) {\r\n      isValid = false;\r\n    } else if (!password) {\r\n      isValid = false;\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  handleOnSubmit(event) {\r\n    event.preventDefault();\r\n    const isValidForm = this._validateForm();\r\n    if (!isValidForm) {\r\n      return false;\r\n    }\r\n\r\n    const { username, password } = this.state;\r\n    if (username !== \"shaadi\" || password !== \"123\") {\r\n      alert(\"Invalid Username Password Combination\");\r\n      return false;\r\n    }\r\n    // NOTE: submitting the form once validated\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false });\r\n      this._dummyAPI();\r\n    }, 2000);\r\n  }\r\n\r\n  _dummyAPI = () => {\r\n    const { history } = this.props;\r\n    const { username } = this.state;\r\n    sessionStorage.setItem(\"IsLogin\", 1);\r\n    sessionStorage.setItem(\"Username\", username);\r\n    history.push(\"/carousel\");\r\n  };\r\n\r\n  render() {\r\n    const { username, password, loading } = this.state;\r\n    return (\r\n      <section className=\"login-wrapper\">\r\n        <div className=\"left-block\">\r\n          <div className=\"title-wrapper\">\r\n            <div className=\"main-title\">SHAADI.com</div>\r\n            <div className=\"sub-title\">Assigment</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"right-block\">\r\n          <div\r\n            style={{ fontSize: \"2rem\", fontWeight: \"600\", color: \"#f7533a\" }}\r\n          >\r\n            Login\r\n          </div>\r\n          <form onSubmit={this.handleOnSubmit}>\r\n            <div className=\"input-group\">\r\n              <label>Username</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={username}\r\n                placeholder=\"Username\"\r\n                onChange={this.handleOnChange}\r\n                onBlur={this.handleOnBlur}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                placeholder=\"Username\"\r\n                onChange={this.handleOnChange}\r\n                onBlur={this.handleOnBlur}\r\n              />\r\n            </div>\r\n            <div className=\"action-block\">\r\n              <button disabled={loading} onClick={this.handleOnSubmit}>\r\n                Login\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nconst LeftArrow = props => {\r\n  const { handleOnSlideLeft } = props;\r\n  return (\r\n    <div className=\"left-arrow\" onClick={handleOnSlideLeft}>\r\n      &lt;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftArrow;\r\n","import React from \"react\";\r\n\r\nconst RightArrow = props => {\r\n  const { handleOnSlideRight } = props;\r\n  return (\r\n    <div className=\"right-arrow\" onClick={handleOnSlideRight}>\r\n      &gt;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightArrow;\r\n","import React from \"react\";\r\n\r\nconst Content = props => {\r\n  const { mainText = \"\", componentClassName } = props;\r\n\r\n  return (\r\n    <div className={[\"carousel-body-main-text\", componentClassName].join(\" \")}>\r\n      {mainText}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Carousel = props => {\r\n  const { content = [], activeSlide } = props;\r\n  return (\r\n    <section className=\"carousel-content-wrapper\">\r\n      {content &&\r\n        content.length > 0 &&\r\n        content.map((data, index) => {\r\n          return (\r\n            <Content\r\n              key={index}\r\n              mainText={data.mainText}\r\n              activeSlide={activeSlide}\r\n              componentClassName={activeSlide === index ? \"active\" : \"\"}\r\n            />\r\n          );\r\n        })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import React from \"react\";\r\n\r\nconst CarouselIndicator = props => {\r\n  const { content = [], activeSlide = \"\", showSelectedSlide } = props;\r\n  return (\r\n    <section className=\"carousel-indicator-wrapper\">\r\n      {content &&\r\n        content.length &&\r\n        content.map((element, index) => {\r\n          return (\r\n            <span\r\n              key={index}\r\n              onClick={() => showSelectedSlide(index)}\r\n              className={\r\n                activeSlide === index ? \"indicator active\" : \"indicator\"\r\n              }\r\n            ></span>\r\n          );\r\n        })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CarouselIndicator;\r\n","import React from \"react\";\r\nimport LeftArrow from \"./LeftArrow\";\r\nimport RightArrow from \"./RightArrow\";\r\nimport CarouselContent from \"./CarouselContent\";\r\nimport CarouselIndicator from \"./CarouselIndicator\";\r\nimport \"../../assets/styles/carousel.scss\";\r\n\r\nexport class Carousel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeSlide: 0\r\n    };\r\n    this.handleOnSlideLeft = this.handleOnSlideLeft.bind(this);\r\n    this.handleOnSlideRight = this.handleOnSlideRight.bind(this);\r\n    this.showSelectedSlide = this.showSelectedSlide.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { delay = \"\" } = this.props;\r\n    if (delay) {\r\n      this.startCaraousel = setInterval(() => {\r\n        const { activeSlide } = this.state;\r\n        const { content } = this.props;\r\n        const total = content.length;\r\n        let val = activeSlide + 1 >= total ? 0 : activeSlide + 1;\r\n        this.setState({ activeSlide: val });\r\n      }, delay);\r\n    }\r\n  }\r\n\r\n  handleOnSlideLeft() {\r\n    const { activeSlide } = this.state;\r\n\r\n    let value = activeSlide - 1;\r\n    if (value < 0) {\r\n      value = 0;\r\n    }\r\n    this.setState({ activeSlide: value });\r\n  }\r\n\r\n  handleOnSlideRight() {\r\n    const { content } = this.props;\r\n    const { activeSlide } = this.state;\r\n    const length = content.length;\r\n\r\n    let value = activeSlide + 1;\r\n    if (value >= length) {\r\n      value = 0;\r\n    }\r\n    this.setState({ activeSlide: value });\r\n  }\r\n\r\n  showSelectedSlide(value) {\r\n    this.setState({ activeSlide: value });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { content = [] } = prevProps;\r\n    if (this.props.content.length !== content.length) {\r\n      this.setState({ activeSlide: 0 });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.startCaraousel);\r\n  }\r\n  render() {\r\n    const { content = [] } = this.props;\r\n    const { activeSlide = 1 } = this.state;\r\n    return (\r\n      <section className=\"carousel-wrapper\">\r\n        <LeftArrow handleOnSlideLeft={this.handleOnSlideLeft} />\r\n        <CarouselContent content={content} activeSlide={activeSlide} />\r\n        <CarouselIndicator\r\n          content={content}\r\n          activeSlide={activeSlide}\r\n          showSelectedSlide={this.showSelectedSlide}\r\n        />\r\n        <RightArrow handleOnSlideRight={this.handleOnSlideRight} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","export class CommonHelper {\r\n  static formatDate(dateString, option = {}) {\r\n    let config = {};\r\n    if (option && Object.keys(option).length === 0) {\r\n      config = {\r\n        year: \"numeric\",\r\n        month: \"short\",\r\n        day: \"2-digit\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\"\r\n      };\r\n    } else {\r\n      config = { ...option };\r\n    }\r\n\r\n    return new Date(dateString).toLocaleDateString(\"en-IN\", config);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { CommonHelper } from \"../helpers\";\r\nimport \"../assets/styles/carousel-history-table.scss\";\r\nexport const CaraouselHistoryTable = props => {\r\n  const { updateHistory = [] } = props;\r\n  if (updateHistory.length === 0) {\r\n    return <section className=\"message\">No Record Found</section>;\r\n  }\r\n  const sortedHistory = updateHistory.reverse();\r\n  return (\r\n    <section className=\"update-history-table-wrapper\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Sr. No.</th>\r\n            <th>No. Of Slides</th>\r\n            <th>Created At</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedHistory.map((data, index) => {\r\n            const { noOfSlides = \"\", createdAt = \"\" } = data;\r\n            return (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{noOfSlides}</td>\r\n                <td>{CommonHelper.formatDate(createdAt)}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst STYLES = {\r\n  MAIN: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"5px\",\r\n    fontSize: \"0.8rem\"\r\n  },\r\n  LOGOUT_TEXT: {\r\n    border: \"0px\",\r\n    backgroundColor: \"#fff\",\r\n    textTransform: \"uppercase\",\r\n    color: \"#f7533a\",\r\n    borderRadius: \"3px\",\r\n    padding: \"2px 10px\",\r\n    boxSadow: \"0px 1px 2px #00000029\",\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0px 1px 3px #d6d6d69c\"\r\n  }\r\n};\r\n\r\nexport const Header = props => {\r\n  const { onLogoutClick } = props;\r\n  const username = !!sessionStorage.getItem(\"Username\")\r\n    ? sessionStorage.getItem(\"Username\")\r\n    : \"\";\r\n  return (\r\n    <header style={STYLES.MAIN}>\r\n      <span style={STYLES.LOGOUT_TEXT} title={username} onClick={() => onLogoutClick()}>\r\n        Logout\r\n      </span>\r\n    </header>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Carousel, CaraouselHistoryTable, Header } from \"../components\";\r\nimport Modal from \"react-responsive-modal\";\r\nimport \"../assets/styles/carousel-page.scss\";\r\n\r\nfunction generateData(number) {\r\n  let result = [];\r\n  if (number) {\r\n    for (let i = 0; i < number; i++) {\r\n      const data = { mainText: i + 1 };\r\n      result.push(data);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nclass CarouselPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      noOfSlides: \"\",\r\n      updateHistory: [],\r\n      modalState: false\r\n    };\r\n    this.handleOnChange = this.handleOnChange.bind(this);\r\n    this.handleShowHistory = this.handleShowHistory.bind(this);\r\n    this.handleOnCloseModal = this.handleOnCloseModal.bind(this);\r\n    this.onLogoutClick = this.onLogoutClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { history } = this.props;\r\n    if (!sessionStorage.getItem(\"IsLogin\") || sessionStorage.getItem(\"IsLogin\") !== \"1\") {\r\n      history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  handleShowHistory() {\r\n    this.setState({ modalState: true });\r\n  }\r\n\r\n  handleOnCloseModal() {\r\n    this.setState({ modalState: false });\r\n  }\r\n\r\n  handleOnChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n    const currentDate = new Date().toISOString();\r\n    const data = { noOfSlides: value, createdAt: currentDate };\r\n    this.setState(\r\n      prevState => ({\r\n        updateHistory: [...prevState.updateHistory, data]\r\n      }),\r\n      this.saveData\r\n    );\r\n  }\r\n\r\n  onLogoutClick() {\r\n    const { history } = this.props;\r\n    const dataToReset = [\"IsLogin\", \"Username\"];\r\n    dataToReset.forEach(element => {\r\n      sessionStorage.removeItem(element);\r\n    });\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  saveData = () => {\r\n    const { updateHistory } = this.state;\r\n    sessionStorage.setItem(\"CarouselUpdateHistory\", JSON.stringify(updateHistory));\r\n  };\r\n\r\n  _renderSelectOptions = num => {\r\n    let result = [];\r\n    if (num) {\r\n      for (let i = 0; i < num; i++) {\r\n        const ele = (\r\n          <option key={i} value={i + 1}>\r\n            {i + 1}\r\n          </option>\r\n        );\r\n        result.push(ele);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    const { noOfSlides, updateHistory, modalState } = this.state;\r\n    const carouselContent = generateData(noOfSlides);\r\n    const componentClassName =\r\n      noOfSlides && noOfSlides > 0 ? \"slide-action-block-selected\" : \"slide-action-block\";\r\n    return (\r\n      <React.Fragment>\r\n        <Header onLogoutClick={this.onLogoutClick} />\r\n        <section className=\"carousel-page-wrapper\">\r\n          <div className={componentClassName}>\r\n            <select name=\"noOfSlides\" onChange={this.handleOnChange}>\r\n              <option value=\"\">Select No. Of Slides </option>\r\n              {this._renderSelectOptions(20)}\r\n            </select>\r\n            {!!noOfSlides && (\r\n              <button\r\n                onClick={this.handleShowHistory}\r\n                className=\"btn-show-history\"\r\n                title=\"Show History\"\r\n              >\r\n                Finish\r\n              </button>\r\n            )}\r\n          </div>\r\n          {!!noOfSlides && <Carousel content={carouselContent} />}\r\n          <Modal open={modalState} onClose={this.handleOnCloseModal} center>\r\n            <CaraouselHistoryTable updateHistory={updateHistory} />\r\n          </Modal>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CarouselPage;\r\n","import React, { Suspense } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport CarouselPage from \"./pages/CarouselPage\";\r\n\r\nconst PageRoutes = () => {\r\n  return (\r\n    <Suspense>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/carousel\" component={CarouselPage} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default PageRoutes;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport PageRoutes from \"./PageRoutes\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <PageRoutes />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}